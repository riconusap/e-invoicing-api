version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: e-invoicing-app-prod
    restart: unless-stopped
    volumes:
      - ./storage:/var/www/html/storage
      - ./bootstrap/cache:/var/www/html/bootstrap/cache
      - /var/log/laravel:/var/www/html/storage/logs
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - DB_CONNECTION=mysql
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=einvoicedb
      - DB_USERNAME=root
      - DB_PASSWORD=${DB_PASSWORD:-rootpass}
      - APP_KEY=${APP_KEY}
      - APP_URL=${APP_URL:-http://localhost}
    depends_on:
      - mysql
    networks:
      - riknus-networks
      - nginx-proxy_proxy-network
    healthcheck:
      test: ["CMD", "php", "artisan", "tinker", "--execute=echo 'OK';"]
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    container_name: e-invoicing-nginx-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./public:/var/www/html/public:ro
      - ./docker/nginx/nginx.prod.conf:/etc/nginx/conf.d/default.conf:ro
      - ./docker/nginx/ssl:/etc/nginx/ssl:ro
      - /var/log/nginx:/var/log/nginx
    depends_on:
      - app
    networks:
      - riknus-networks
      - nginx-proxy_proxy-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      timeout: 10s
      retries: 3

  mysql:
    image: mysql:8.0
    container_name: e-invoicing-mysql-prod
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD:-rootpass}
      - MYSQL_DATABASE=einvoicedb
      - MYSQL_USER=appuser
      - MYSQL_PASSWORD=${DB_PASSWORD:-rootpass}
    command: --default-authentication-plugin=mysql_native_password --innodb-buffer-pool-size=512M
    volumes:
      - mysql_data_prod:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf:ro
      - /var/log/mysql:/var/log/mysql
    networks:
      - riknus-networks
      - nginx-proxy_proxy-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  redis:
    image: redis:7-alpine
    container_name: e-invoicing-redis-prod
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis123}
    volumes:
      - redis_data_prod:/data
    networks:
      - riknus-networks
      - nginx-proxy_proxy-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 10s
      retries: 3

networks:
  riknus-networks:
    driver: bridge
    name: riknus-networks
    external: true
  nginx-proxy_proxy-network:
    external: true

volumes:
  mysql_data_prod:
    driver: local
  redis_data_prod:
    driver: local
